% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read.R
\name{read10xVisiumSFE}
\alias{read10xVisiumSFE}
\title{Read 10X Visium data as SpatialFeatureExperiment}
\usage{
read10xVisiumSFE(
  samples = "",
  dirs = file.path(samples, "outs"),
  sample_id = paste0("sample", sprintf("\%02d", seq_along(samples))),
  bin_size = NULL,
  type = c("HDF5", "sparse"),
  data = c("filtered", "raw"),
  images = c("lowres", "hires"),
  unit = c("full_res_image_pixel", "micron"),
  add_Graph = TRUE,
  style = "W",
  zero.policy = NULL,
  load = FALSE
)
}
\arguments{
\item{samples}{a character vector specifying one or more directories, 
each corresponding to a 10x Genomics Visium sample (see Details);
if provided, names will be used as sample identifiers}

\item{dirs}{Directory for each sample that contains the \code{spatial} and
\code{raw/filtered_featues_bc_matrix} directories. By default, the
\code{outs} directory under the directory specified in the \code{samples}
argument, as in Space Ranger output. Change the \code{dirs} argument if you
have moved or renamed the output directory.}

\item{sample_id}{character string specifying unique sample identifiers,
one for each directory specified via \code{samples}; 
ignored if \code{!is.null(names(samples))}}

\item{bin_size}{\code{c(character)}, use this only when loading VisiumHD.
Specify which bin resolution to load, default is \code{NULL} which assumes that data is standard Visium.
Eg, single resolution is \code{c("8")}, if to load all three resolutions, use \code{c("2", "8", "16")}.}

\item{type}{Either "HDF5", and the matrix will be represented as
\code{TENxMatrix}, or "sparse", and the matrix will be read as a
\code{dgCMatrix}.}

\item{data}{character string specifying whether to read in
filtered (spots mapped to tissue) or raw data (all spots).}

\item{images}{character vector specifying which images to include. 
Valid values are \code{"lowres", "hires", "fullres", "detected", "aligned"}}

\item{unit}{Whether to use pixels in full resolution image or microns as the
unit. If using microns, then spacing between spots in pixels will be used
to convert the coordinates into microns, as the spacing is known to be 100
microns. This is used to plot scale bar.}

\item{add_Graph}{\code{c(local)}, if to add spatial neighborhood graph for spots and only if \code{c(data = "filtered")}.
Default is \code{c(TRUE)}}

\item{style}{\code{style} can take values \dQuote{W}, \dQuote{B}, \dQuote{C}, \dQuote{U}, \dQuote{minmax} and \dQuote{S}}

\item{zero.policy}{default NULL, use global option value; if FALSE stop with error for any empty neighbour sets, if TRUE permit the weights list to be formed with zero-length weights vectors}

\item{load}{Not used, kept for backward compatibility.}
}
\value{
A SpatialFeatureExperiment object. The images might need to be
  manually transposed and/or mirrored to match the spots in this version of
  this package.
}
\description{
Read Space Ranger output as a SpatialFeatureExperiment object, where spots
are represented with polygons in the colGeometry called "spotPoly". Other
geometries can be added later after the dataset is read. If \code{data =
"filtered"}, then spatial neighborhood graphs of the spots are also computed
and stored in the colGraph called "visium" in all samples for downstream
spatial analyses.
}
\note{
The \code{as(<dgTMatrix>, "dgCMatrix") is deprecated} warning comes
  from the \code{DropletUtils} package which is used by
  \code{SpatialExperiment} to read 10X outputs. This will be fixed when
  \code{SpatialExperiment} switches to TENxIO.

It is assumed that the images have not been cropped. Otherwise the
images might not align with the spots.
}
\examples{
dir <- system.file("extdata", package = "SpatialFeatureExperiment")

sample_ids <- c("sample01", "sample02")
samples <- file.path(dir, sample_ids)

list.files(samples[1])
list.files(file.path(samples[1], "spatial"))
(sfe <- read10xVisiumSFE(samples, sample_id = sample_ids,
    type = "sparse", data = "filtered",
    load = FALSE
))

# load VisiumHD
# path to "binned_outputs" directory containing:
└── binned_outputs
    ├── square_002um
    ├── square_008um
    └── square_016um
dir_hd <- "~/Downloads/Visium_HD_Mouse_Brain/binned_outputs/"
# this is public dataset -> https://www.10xgenomics.com/datasets/visium-hd-cytassist-gene-expression-libraries-of-mouse-brain-he
sfe_hd <-
read10xVisiumSFE(samples = list.files(dir_hd), # 1:3 resolutions
                 dirs = dir_hd,
                 bin_size = c("8", "16"), # this defines which of 1:3 resolutions to load
                 type = "HDF5", # Note, "sparse" -> takes longer to load
                 data = "filtered", # spots under tissue
                 images = c("lowres"), # for now low res. image only
                 add_Graph = FALSE # Note, if VisiumHD this can take time for 2 or 8µm res.
                 )

}
\concept{Read data into SFE}
